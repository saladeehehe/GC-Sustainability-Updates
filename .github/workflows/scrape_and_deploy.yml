name: Scraper and Deploy

on:
  schedule:
    - cron: '0 10 * * *'  # Runs every day at 10:00 AM UTC
  push:
    branches:
      - Deployment
  workflow_dispatch:  # Allows manual triggering of the workflow

permissions:
  contents: write  # Ensure the workflow has write permissions

jobs:
  run-scrapers:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # This action will use Node.js 20 automatically

    - name: Set up Python
      uses: actions/setup-python@v4  # This action will use Node.js 20 automatically
      with:
        python-version: '3.11'  # Using the latest stable version of Python

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt  # Adjusted path to requirements.txt

    - name: Run aggregator script
      run: python aggregate_scrapers.py
      
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add public/news_data2.json
        git commit -m "Update scraped data"
        git push

  deploy:
    if: github.ref == 'refs/heads/Deployment'
    needs: run-scrapers
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Updated to v3

    - name: Set up Node.js
      uses: actions/setup-node@v3  # Updated to v3
      with:
        node-version: 'lts/*' # Use the latest LTS version of Node.js

    - name: Install Node.js dependencies
      run: yarn install

    - name: Build project
      run: yarn build

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Deploy to GitHub Pages
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }} # Use the PAT instead of the default GITHUB_TOKEN
      run: |
        yarn add gh-pages
        git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
        yarn deploy
